# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SunFounder
# This file is distributed under the same license as the SunFounder RasPad 3
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SunFounder RasPad 3 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-11 10:35+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../iot/learn_more_about_control.py.rst:2
msgid "Learn More about ``control.py``"
msgstr ""

#: ../iot/learn_more_about_control.py.rst:4
msgid ""
"In order to better understand the projects that follow, let's take a look"
" at the official sample code provided by Cloud4RPi."
msgstr ""

#: ../iot/learn_more_about_control.py.rst:8
msgid ""
"Please complete the previous section :ref:`Quick Guide on Cloud4RPi` "
"before viewing this section."
msgstr ""

#: ../iot/learn_more_about_control.py.rst:10
msgid "Open the ``control.py`` file."
msgstr ""

#: ../iot/learn_more_about_control.py.rst:21
msgid ""
"Cloud4RPi will set a device token for each one, and you need to fill in "
"the variable DEVICE_TOKEN with the correct device token in order to "
"connect to the corresponding device."
msgstr ""

#: ../iot/learn_more_about_control.py.rst:27
msgid ""
"``variables`` is a 2-dimensional dictionary, and the value corresponding "
"to each of its keys is also a dictionary."
msgstr ""

#: ../iot/learn_more_about_control.py.rst:29
msgid ""
"The keys of the ``variables`` dictionary are ``'Room Temp'``, ``'LED "
"On'``, ``'CPU Temp'``, ``'STATUS'``, ``'Location'``, which are all data "
"displayed on the Control Panel's widgets."
msgstr ""

#: ../iot/learn_more_about_control.py.rst:31
msgid ""
"The value of each key in the ``variables`` dictionary is also a "
"dictionary, and the keys of these dictionaries are the same, where the "
"value of the ``'bind'`` key is a function that can return the transferred"
" content, and the ``'type'`` is the data type of the transferred content "
"(``'numeric'`` is a numeric type, ``'string'`` is a string type, "
"``'bool'`` is a boolean type, and ``'location'`` is a list containing two"
" dictionaries)."
msgstr ""

#: ../iot/learn_more_about_control.py.rst:33
msgid ""
"Through the analysis of the ``variables`` dictionary, we can know that "
"Cloud4RPi will read the keys of the ``variables`` dictionary and display "
"the value corresponding to the key in the Control Panel. Obviously we "
"cannot change the keys of the ``variables`` dictionary, but we can change"
" the value in the key (the value of the ``'bind'`` dictionary) to let the"
" widgets display the content we want."
msgstr ""

#: ../iot/learn_more_about_control.py.rst:35
msgid ""
"For example, if we want to send humidity values to Cloud4RPi, we cannot "
"add a new key to the ``variables`` dictionary, but we can borrow a key, "
"such as the ``'Room Temp'`` key, and then write the function that returns"
" the humidity value in the corresponding ``'bind'`` key."
msgstr ""

#: ../iot/learn_more_about_control.py.rst:62
msgid ""
"The ``vdiagnostics`` stores information about the Raspberry Pi and is "
"used to verify and prevent misconnections."
msgstr ""

